openapi: 3.0.0
info:
  title: H Plus Sports API
  version: 1.0.0
paths:
  /product:
    get:
      description: Get list of all products in the catalog
      summary: Get list of products
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
      responses:
        200:
          description: List of products
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsSearchResult'
        500:
          $ref: '#/components/responses/500ApiError'
    post:
      description: Add product to catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: Product has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        500:
          $ref: '#/components/responses/500ApiError'

  /product/{productId}:
    get:
      description: Get product by id
      summary: Get product by id
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
            example: 100
        - in: header
          name: custom-security
          required: false
          schema:
            type: string
            example: Bearer Token
      responses:  
        200:
          description: Detail product
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/Product'  
            application/xml:
              schema: 
                $ref: '#/components/schemas/Product'
        500:
          $ref: '#/components/responses/500ApiError'

# First challenge
  /blog:
    get:
      description: Get list of blogs
      summary: List of blogs
      responses:
        200:
          description: Success response
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id: 
                      type: integer
                      example: 1
                    createdDate:
                      type: string
                      format: date
                      example: 2023-01-01
                    tagline:
                      type: string
                      example: How to efficient push up?
                    content:
                      type: string
                      example: Lorem ipsum dolor sit amet Lorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit ametLorem ipsum dolor sit amet
                    category: 
                      type: string
                      example: exercises
                    tags: 
                      type: array
                      example: 
                        - exercises
                        - pushup
                        - workout
        500:
          $ref: '#/components/responses/500ApiError'

# Schemas
components:
  schemas:
    Product:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Mineral Water
        description:
          type: string
          example: Fuji Mineral Water, fresh from mountain
        image_title:
          type: string
          example: fuji-mineral-water
        image:
          type: string
          example: https://placekitten.com/1080/1920
    
    Products:
      type: array
      items:
        $ref: '#/components/schemas/Product'

    Meta:
      type: object
      properties:
        total:
          type: integer
          example: 100
        size:
          type: integer
          example: 10
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 10

    ProductsSearchResult:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Products'
        pagination:
          $ref: '#/components/schemas/Meta'
    
  responses:
    500ApiError:
      description: Unexpected Error
      content:
        application/json:
          schema: 
            type: object
            properties:
              statusCode:
                type: string
                example: 500
              message:
                type: string
                example: Unexpected Error

  parameters:
    PageNumber:
      in: query
      name: pageNumber
      description: Page number to return
      required: false
      schema:
        type: integer
        example: 1
    
    PageSize:
      in: query
      name: pageSize
      description: Total data to return
      required: false
      schema:
        type: integer
        example: 10
        maximum: 100
